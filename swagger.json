{
  "openapi": "3.0.1",
  "info": {
    "title": "Make Me Rich API",
    "description": "A simple API for managing your personal finances",
    "contact": {
      "name": "Sebastian Studniczek"
    },
    "version": "v1"
  },
  "paths": {
    "/v1/externaltrancations/{id}": {
      "get": {
        "tags": [
          "ExternalTrancations"
        ],
        "summary": "Get an external transacton by id with its transaction categories.",
        "operationId": "GetExternalTransactionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalTransactionDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ExternalTrancations"
        ],
        "summary": "Update an existing external transaction and its transaction categories.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExternalTransactionCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExternalTransactionCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateExternalTransactionCommand"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ExternalTrancations"
        ],
        "summary": "Delete an existing external transaction by id with its transaction categories.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteExternalTransactionCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteExternalTransactionCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteExternalTransactionCommand"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/financialaccounts": {
      "get": {
        "tags": [
          "FinancialAccounts"
        ],
        "summary": "Get all financial accounts.",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinancialAccountDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FinancialAccounts"
        ],
        "summary": "Create a new financial account.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinancialAccountCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinancialAccountCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinancialAccountCommand"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/financialaccounts/{id}": {
      "get": {
        "tags": [
          "FinancialAccounts"
        ],
        "summary": "Get a financial account by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccountDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FinancialAccounts"
        ],
        "summary": "Update an existing financial account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFinancialAccountCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFinancialAccountCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFinancialAccountCommand"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FinancialAccounts"
        ],
        "summary": "Delete an existing financial account by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/financialaccounts/{id}/externaltransactions": {
      "get": {
        "tags": [
          "FinancialAccounts"
        ],
        "summary": "Get all external transactions for a specific financial account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExternalTransactionDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FinancialAccounts"
        ],
        "summary": "Create a new external transaction for a specific financial account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExternalTransactionCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExternalTransactionCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExternalTransactionCommand"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalTransactionDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/financialaccounts/{id}/internaltransactions": {
      "get": {
        "tags": [
          "FinancialAccounts"
        ],
        "summary": "Get all internal transactions for a specific financial account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InternalTransactionDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FinancialAccounts"
        ],
        "summary": "Create a new internal transaction for a specific financial account.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInternalTransactionCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInternalTransactionCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInternalTransactionCommand"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalTransactionDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/financialcategories": {
      "get": {
        "tags": [
          "FinancialCategories"
        ],
        "summary": "Get all financial categories.",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinancialCategoryDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FinancialCategories"
        ],
        "summary": "Create a new financial category.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinancialCategoryCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinancialCategoryCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinancialCategoryCommand"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialCategoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/financialcategories/{id}": {
      "get": {
        "tags": [
          "FinancialCategories"
        ],
        "summary": "Get a financial category by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialCategoryDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FinancialCategories"
        ],
        "summary": "Update an existing financial category.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFinancialCategoryCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFinancialCategoryCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFinancialCategoryCommand"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FinancialCategories"
        ],
        "summary": "Delete an existing financial category by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/v1/identity/register": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Register a new user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/v1/identity/login": {
      "post": {
        "tags": [
          "Identity"
        ],
        "summary": "Log in an existing user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/v1/internaltransactions/{id}": {
      "get": {
        "tags": [
          "InternalTransactions"
        ],
        "summary": "Get an internal transacton by id.",
        "operationId": "GetInternalTransactionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalTransactionDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InternalTransactions"
        ],
        "summary": "Update an existing internal transaction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInternalTransactionCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInternalTransactionCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInternalTransactionCommand"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InternalTransactions"
        ],
        "summary": "Delete an existing internal transaction by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteInternalTransactionCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteInternalTransactionCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteInternalTransactionCommand"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ExternalTransactionCategoryDto": {
        "type": "object",
        "properties": {
          "externalTransactionId": {
            "type": "integer",
            "format": "int32"
          },
          "financialCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "financialCategoryName": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalTransactionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "financialAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "transactionSideName": {
            "type": "string",
            "nullable": true
          },
          "transactionType": {
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "transactionCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalTransactionCategoryDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalTransactionType": {
        "enum": [
          "Expense",
          "Income"
        ],
        "type": "string"
      },
      "ExternalTransactionCategoryUpdateDto": {
        "required": [
          "amount",
          "financialCategoryId"
        ],
        "type": "object",
        "properties": {
          "financialCategoryId": {
            "minLength": 1,
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "minLength": 1,
            "type": "number",
            "format": "double"
          },
          "description": {
            "maxLength": 150,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateExternalTransactionCommand": {
        "required": [
          "dueDate",
          "financialAccountId",
          "totalAmount",
          "transactionCategories",
          "transactionSideName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "totalAmount": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "minLength": 1,
            "type": "integer",
            "format": "int32"
          },
          "dueDate": {
            "minLength": 1,
            "type": "string",
            "format": "date"
          },
          "description": {
            "maxLength": 150,
            "type": "string",
            "nullable": true
          },
          "financialAccountId": {
            "minLength": 1,
            "type": "integer",
            "format": "int32"
          },
          "transactionSideName": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          },
          "transactionType": {
            "$ref": "#/components/schemas/ExternalTransactionType"
          },
          "transactionCategories": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalTransactionCategoryUpdateDto"
            }
          }
        },
        "additionalProperties": false
      },
      "DeleteExternalTransactionCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FinancialAccountDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "currentBalance": {
            "type": "number",
            "format": "double"
          },
          "accountType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FinancialAccountType": {
        "enum": [
          "Banking",
          "Cash",
          "Other"
        ],
        "type": "string"
      },
      "CreateFinancialAccountCommand": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "currentBalance": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "$ref": "#/components/schemas/FinancialAccountType"
          }
        },
        "additionalProperties": false
      },
      "UpdateFinancialAccountCommand": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "currentBalance": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "$ref": "#/components/schemas/FinancialAccountType"
          }
        },
        "additionalProperties": false
      },
      "ExternalTransactionCategoryCreateDto": {
        "required": [
          "amount",
          "financialCategoryId"
        ],
        "type": "object",
        "properties": {
          "financialCategoryId": {
            "minLength": 1,
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "minLength": 1,
            "type": "number",
            "format": "double"
          },
          "description": {
            "maxLength": 150,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateExternalTransactionCommand": {
        "required": [
          "dueDate",
          "financialAccountId",
          "totalAmount",
          "transactionCategories",
          "transactionSideName"
        ],
        "type": "object",
        "properties": {
          "totalAmount": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "minLength": 1,
            "type": "number",
            "format": "double"
          },
          "dueDate": {
            "minLength": 1,
            "type": "string",
            "format": "date"
          },
          "description": {
            "maxLength": 150,
            "type": "string",
            "nullable": true
          },
          "financialAccountId": {
            "minLength": 1,
            "type": "integer",
            "format": "int32"
          },
          "transactionSideName": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          },
          "transactionType": {
            "$ref": "#/components/schemas/ExternalTransactionType"
          },
          "transactionCategories": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalTransactionCategoryCreateDto"
            }
          }
        },
        "additionalProperties": false
      },
      "InternalTransactionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sendingAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "receivingAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateInternalTransactionCommand": {
        "required": [
          "dueDate",
          "receivingAccountId",
          "sendingAccountId",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "totalAmount": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "minLength": 1,
            "type": "number",
            "format": "double"
          },
          "dueDate": {
            "minLength": 1,
            "type": "string",
            "format": "date"
          },
          "description": {
            "maxLength": 150,
            "type": "string",
            "nullable": true
          },
          "sendingAccountId": {
            "minLength": 1,
            "type": "integer",
            "format": "int32"
          },
          "receivingAccountId": {
            "minLength": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FinancialCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateFinancialCategoryCommand": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 75,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateFinancialCategoryCommand": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateInternalTransactionCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int32"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sendingAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "receivingAccountId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteInternalTransactionCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please insert JWT token into field.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}